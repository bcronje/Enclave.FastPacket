//HintName: T.ValueItem_Generated.cs
// <auto-generated />

using System;
using System.Buffers.Binary;

namespace T
{
    readonly ref partial struct ValueItem
    {
        private readonly Span<byte> _span;

        /// <summary>
        /// Defines the minimum possible size of this packet, given all
        /// known fixed sizes.
        /// </summary>
        public const int MinimumSize = 0;

        public ValueItem(Span<byte> packetData)
        {
            _span = packetData;
        }

        public Span<byte> GetRawData() => _span;

        
        
        public System.Span<byte> Value
        {
           get => _span.Slice(0, T.PacketDefinition.ValueFunc(_span, 0));
        }
        
        
        public System.Span<byte> Value2
        {
           get => _span.Slice(0 + T.PacketDefinition.ValueFunc(_span, 0), T.PacketDefinition.Value2Func(_span));
        }
        
        
        public System.Span<byte> Remaining
        {
           get => _span.Slice(0 + T.PacketDefinition.ValueFunc(_span, 0) + T.PacketDefinition.Value2Func(_span));
        }
        
    }
}
